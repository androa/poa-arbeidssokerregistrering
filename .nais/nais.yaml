apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
  name: "poa-arbeidssokerregistrering"
  namespace: "paw"
  labels:
    "team": "paw"
spec:
  image: {{image}}
  port: 3000
  liveness:
    path: "{{basePath}}/api/isalive"
    initialDelay: 3
  readiness:
    path: "{{basePath}}/api/isready"
    initialDelay: 3
  replicas:
    min: 2
    max: 2
    cpuThresholdPercentage: 50
  prometheus:
    enabled: false
  limits:
    cpu: "200m"
    memory: "256Mi"
  requests:
    cpu: "200m"
    memory: "256Mi"
  env:
    - name: SELF_URL
      value: {{ingress}}
    - name: DEKORATOR_URL
      value: {{dekorator.url}}
    - name: DEKORATOR_ENV
      value: {{dekorator.env}}
    - name: LOGINSERVICE_URL
      value: {{loginservice.url}}
    - name: LOGINSERVICE_WELL_KNOWN_URL
      value: {{loginservice.wellKnown}}
    - name: NEXT_PUBLIC_SELF_URL
      value: {{ingress}}
    - name: NEXT_PUBLIC_AMPLITUDE_API_KEY
      value: {{amplitude.apiKey}}
    - name: NEXT_PUBLIC_AMPLITUDE_ENDPOINT
      value: {{amplitude.endPoint}}
    - name: NEXT_PUBLIC_API_MOCKING
      value: {{mocking}}
    - name: NEXT_PUBLIC_SENTRY_DSN
      value: {{sentry.dsn}}
    - name: PAM_JANZZ_URL
      value: {{ pamJanzzUrl }}
    - name: START_REGISTRERING_URL
      value: {{startRegistreringUrl}}
    - name: FULLFOR_REGISTRERING_URL
      value: {{fullforRegistreringUrl}}
    - name: SISTE_ARBEIDSFORHOLD_URL
      value: {{sisteArbeidsforholdUrl}}
    - name: OPPRETT_OPPGAVE_URL
      value: {{sisteArbeidsforholdUrl}}
    - name: PTO_PROXY_URL
      value: {{ptoProxyUrl}}
  ingresses:
    - {{ingress}}
  idporten:
    enabled: true
    sidecar:
      enabled: true
      level: Level4
  tokenx:
    enabled: true
  accessPolicy:
    outbound:
      rules:
        - application: pto-proxy
          namespace: pto
